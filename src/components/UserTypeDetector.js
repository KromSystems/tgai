/**
 * UserTypeDetector - –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /help
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
 */

class UserTypeDetector {
    constructor(adminId) {
        this.adminId = adminId;
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {Object} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
     * @returns {string} - –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: 'admin', 'authorized', 'unauthorized'
     */
    detectUserType(telegramId, user) {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if (this.isAdmin(telegramId)) {
            return 'admin';
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (user && user.isAuthorized()) {
            return 'authorized';
        }

        // –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        return 'unauthorized';
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
     * @param {number} telegramId - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {boolean}
     */
    isAdmin(telegramId) {
        return telegramId === this.adminId;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º
     * @param {Object} user - –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
     * @returns {boolean}
     */
    isAuthorized(user) {
        return user && user.isAuthorized();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {string} userType - –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {Object} - –û–±—ä–µ–∫—Ç —Å –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
     */
    getUserPermissions(userType) {
        const permissions = {
            admin: {
                canViewAdminPanel: true,
                canManageUsers: true,
                canViewStatistics: true,
                canChangeSettings: true,
                canAccessBackup: true,
                canViewAllRequests: true,
                canApproveRequests: true,
                canBlockUsers: true,
                level: 'admin'
            },
            authorized: {
                canViewAdminPanel: false,
                canManageUsers: false,
                canViewStatistics: false,
                canChangeSettings: false,
                canAccessBackup: false,
                canViewAllRequests: false,
                canApproveRequests: false,
                canBlockUsers: false,
                canEditProfile: true,
                canViewHistory: true,
                canContactSupport: true,
                level: 'user'
            },
            unauthorized: {
                canViewAdminPanel: false,
                canManageUsers: false,
                canViewStatistics: false,
                canChangeSettings: false,
                canAccessBackup: false,
                canViewAllRequests: false,
                canApproveRequests: false,
                canBlockUsers: false,
                canEditProfile: false,
                canViewHistory: false,
                canContactSupport: true,
                canRequestAuth: true,
                canViewPublicInfo: true,
                level: 'guest'
            }
        };

        return permissions[userType] || permissions.unauthorized;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏–∏
     * @param {string} userType - –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {string} action - –î–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
     * @returns {boolean}
     */
    hasPermission(userType, action) {
        const permissions = this.getUserPermissions(userType);
        return permissions[action] || false;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –º–µ–Ω—é
     * @param {string} userType - –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {Array} - –ú–∞—Å—Å–∏–≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
     */
    getAvailableMenuSections(userType) {
        const sections = {
            admin: [
                'main',
                'admin_users',
                'admin_stats', 
                'admin_settings',
                'admin_notifications',
                'admin_requests',
                'admin_blocks',
                'admin_backup'
            ],
            authorized: [
                'main',
                'user_profile',
                'user_settings',
                'user_history',
                'user_news',
                'user_faq',
                'user_support'
            ],
            unauthorized: [
                'main',
                'guest_about',
                'guest_rules',
                'guest_contacts',
                'guest_faq',
                'guest_auth_info'
            ]
        };

        return sections[userType] || sections.unauthorized;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞
     * @param {string} userType - –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {string} - –ß–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è
     */
    getUserLevelName(userType) {
        const levelNames = {
            admin: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
            authorized: '–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            unauthorized: '–ì–æ—Å—Ç—å'
        };

        return levelNames[userType] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–∏–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {string} userType - –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {string} - –≠–º–æ–¥–∑–∏ –∏–∫–æ–Ω–∫–∞
     */
    getUserIcon(userType) {
        const icons = {
            admin: 'üëë',
            authorized: '‚úÖ',
            unauthorized: 'üîí'
        };

        return icons[userType] || '‚ùì';
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
     * @param {string} userType - –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {string} targetSection - –¶–µ–ª–µ–≤–æ–π —Ä–∞–∑–¥–µ–ª
     * @returns {Object} - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏
     */
    checkAccessWarning(userType, targetSection) {
        const permissions = this.getUserPermissions(userType);
        
        // –°–ø–∏—Å–æ–∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø—Ä–∞–≤
        const protectedSections = {
            'admin_users': 'canManageUsers',
            'admin_stats': 'canViewStatistics',
            'admin_settings': 'canChangeSettings',
            'admin_backup': 'canAccessBackup',
            'user_profile': 'canEditProfile',
            'user_history': 'canViewHistory'
        };

        const requiredPermission = protectedSections[targetSection];
        
        if (requiredPermission && !permissions[requiredPermission]) {
            return {
                hasWarning: true,
                message: this.getAccessDeniedMessage(userType, targetSection),
                suggestedAction: this.getSuggestedAction(userType)
            };
        }

        return {
            hasWarning: false,
            message: null,
            suggestedAction: null
        };
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ –≤ –¥–æ—Å—Ç—É–ø–µ
     * @param {string} userType - –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {string} section - –†–∞–∑–¥–µ–ª
     * @returns {string} - –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
     */
    getAccessDeniedMessage(userType, section) {
        if (userType === 'unauthorized') {
            return 'üîí –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.';
        }

        if (userType === 'authorized' && section.startsWith('admin_')) {
            return 'üëë –≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.\n\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã.';
        }

        return '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É.';
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
     * @param {string} userType - –¢–∏–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @returns {string} - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
     */
    getSuggestedAction(userType) {
        const actions = {
            unauthorized: '–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è"',
            authorized: '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∑–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏',
            admin: '–£ –≤–∞—Å –µ—Å—Ç—å –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º'
        };

        return actions[userType] || '–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É';
    }
}

module.exports = UserTypeDetector;