/**
 * Migration: Replace GTA cars with real car models
 * –ó–∞–º–µ–Ω—è–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏–∑ GTA San Andreas –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
 */

const database = require('../connection');

async function up() {
    try {
        console.log('üöó –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–º–µ–Ω—É –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏...');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
        const requestsCheck = await database.get('SELECT COUNT(*) as count FROM garage_requests');
        if (requestsCheck.count > 0) {
            console.log(`‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ ${requestsCheck.count} –∑–∞—è–≤–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ. –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π...`);
        }

        // –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        await database.run('PRAGMA foreign_keys = OFF');
        console.log('üîì –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π –æ—Ç–∫–ª—é—á–µ–Ω–∞');

        // –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Ä–µ–∞–ª—å–Ω—ã—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π (–∏—Å–∫–ª—é—á–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç Mercedes G63AMG)
        const newCars = [
            { car_id: 1, car_name: 'BMW 4-Series', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 2, car_name: 'Audi RS6', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 3, car_name: 'Mercedes G63AMG', status: '–ü–ª–æ—Ö–æ–µ' },
            { car_id: 4, car_name: 'Tesla Model 3', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 5, car_name: 'Chevrolet Camaro', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 6, car_name: 'Rolls-Royce Phantom', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 7, car_name: 'Ferrari J50', status: '–ü–ª–æ—Ö–æ–µ' },
            { car_id: 8, car_name: 'Porsche 911', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 9, car_name: 'Sparrow', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 10, car_name: 'Ducati Ducnaked', status: '–ü–ª–æ—Ö–æ–µ' },
            { car_id: 11, car_name: 'NRG-500', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 12, car_name: 'Mercedes-Benz C63S', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 13, car_name: 'BMW M3 Touring', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 14, car_name: 'Lamborghini Huracan 2022', status: '–ü–ª–æ—Ö–æ–µ' }
        ];

        // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
        await database.run('DELETE FROM garage');
        console.log('üóëÔ∏è  –°—Ç–∞—Ä—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —É–¥–∞–ª–µ–Ω—ã');

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
        await database.run('DELETE FROM sqlite_sequence WHERE name = "garage"');

        // –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
        const insertSql = `
            INSERT INTO garage (car_id, car_name, status, last_maintenance, created_at) 
            VALUES (?, ?, ?, datetime('now', '-' || (ABS(RANDOM()) % 30 + 1) || ' days'), CURRENT_TIMESTAMP)
        `;

        let insertedCount = 0;
        for (const car of newCars) {
            try {
                await database.run(insertSql, [car.car_id, car.car_name, car.status]);
                insertedCount++;
                console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: ${car.car_name} (${car.status})`);
            } catch (error) {
                console.error(`‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è ${car.car_name}:`, error.message);
                throw error;
            }
        }

        // –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        await database.run('PRAGMA foreign_keys = ON');
        console.log('üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π –≤–∫–ª—é—á–µ–Ω–∞');

        console.log(`üéâ –£—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ ${insertedCount} –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const finalCount = await database.get('SELECT COUNT(*) as count FROM garage');
        console.log(`üìä –í—Å–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –≥–∞—Ä–∞–∂–µ: ${finalCount.count}`);

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
        const statsQuery = `
            SELECT 
                status,
                COUNT(*) as count
            FROM garage 
            GROUP BY status
        `;
        
        const stats = await database.all(statsQuery);
        console.log('üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:');
        stats.forEach(stat => {
            const emoji = stat.status === '–•–æ—Ä–æ—à–µ–µ' ? 'üü¢' : stat.status === '–°—Ä–µ–¥–Ω–µ–µ' ? 'üü°' : 'üî¥';
            console.log(`   ${emoji} ${stat.status}: ${stat.count} –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π`);
        });

        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–º–µ–Ω—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π:', error);
        
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–≤–µ—Ä–∫—É –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π
        try {
            await database.run('PRAGMA foreign_keys = ON');
        } catch (pragmaError) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è PRAGMA:', pragmaError);
        }
        
        throw error;
    }
}

async function down() {
    try {
        console.log('üîÑ –û—Ç–∫–∞—Ç –∫ –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º GTA San Andreas...');
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∏–∑ GTA
        const gtaCars = [
            { car_id: 1, car_name: 'Infernus', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 2, car_name: 'Cheetah', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 3, car_name: 'Banshee', status: '–ü–ª–æ—Ö–æ–µ' },
            { car_id: 4, car_name: 'Bullet', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 5, car_name: 'Turismo', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 6, car_name: 'ZR-350', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 7, car_name: 'Jester', status: '–ü–ª–æ—Ö–æ–µ' },
            { car_id: 8, car_name: 'Sultan', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 9, car_name: 'Elegy', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 10, car_name: 'Uranus', status: '–ü–ª–æ—Ö–æ–µ' },
            { car_id: 11, car_name: 'Phoenix', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 12, car_name: 'Comet', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 13, car_name: 'Buffalo', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 14, car_name: 'Feltzer', status: '–ü–ª–æ—Ö–æ–µ' },
            { car_id: 15, car_name: 'Euros', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 16, car_name: 'Flash', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 17, car_name: 'Stratum', status: '–ü–ª–æ—Ö–æ–µ' },
            { car_id: 18, car_name: 'Club', status: '–•–æ—Ä–æ—à–µ–µ' },
            { car_id: 19, car_name: 'Super GT', status: '–°—Ä–µ–¥–Ω–µ–µ' },
            { car_id: 20, car_name: 'Hotknife', status: '–ü–ª–æ—Ö–æ–µ' }
        ];

        // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â—É—é —Ç–∞–±–ª–∏—Ü—É
        await database.run('DELETE FROM garage');
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º GTA –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
        const insertSql = `
            INSERT INTO garage (car_id, car_name, status, last_maintenance, created_at) 
            VALUES (?, ?, ?, datetime('now', '-' || (ABS(RANDOM()) % 30 + 1) || ' days'), CURRENT_TIMESTAMP)
        `;

        for (const car of gtaCars) {
            await database.run(insertSql, [car.car_id, car.car_name, car.status]);
        }

        console.log('‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ GTA San Andreas –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–∞—Ç–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
        throw error;
    }
}

module.exports = {
    up,
    down,
    description: 'Replace GTA San Andreas cars with real car models from user list'
};